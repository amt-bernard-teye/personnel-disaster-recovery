generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  PERSONNEL
}

enum AccountStatus {
  VERIFIED
  PENDING
  SUSPENDED
}

model User {
  id String @id
  name String
  email String
  image String?
  password String
  role Role
  accountStatus AccountStatus @default(PENDING)
  personnel Personnel?

  @@map("users")
}

enum Gender {
  MALE
  FEMALE
}

model Personnel {
  id Int @id @default(autoincrement())
  created_at DateTime @default(now())
  phoneNumber String
  houseNumber String
  gender Gender
  dob DateTime
  town String
  digitalAddress String
  userId String @unique
  user User @relation(fields: [userId], references: [id])
  professionId Int @map("profession_id")
  profession Profession @relation(fields: [professionId], references: [id])
  status PersonnelStatus  @default(PENDING)
  availability AvailabilityStatus @default(AVAILABLE)
  personnelProfession PersonnelProfession?
  educationalBackground EducationalBackground?
  projects Project[]
  emergencyInitiativePersonnel EmergencyIntiativePersonnel[]

  @@map("personnels")
}

enum PersonnelStatus {
  PENDING
  APPROVE
  DISAPPROVE
}

enum AvailabilityStatus {
  AVAILABLE
  UNAVAILABLE
}

enum EmergencyTypeStatus {
  ACTIVE
  REMOVED
}

model Profession {
  id Int @id @default(autoincrement())
  created_at DateTime @default(now())
  name String
  status AvailabilityStatus @default(AVAILABLE)
  personnel Personnel[]
  emergencyInitiativeProfession EmergencyIntiativeProfession[]

  @@map("professions")
}

model PersonnelProfession {
  employee_id String @id
  experienceYears Int
  employer_name String
  employer_email String
  personnelId Int @unique
  personnel Personnel @relation(fields: [personnelId], references: [id])
  currrentPosition CurrentPosition

  @@map("personnnel_profession")
}

enum CurrentPosition {
  JUNIOR
  ASSOCIATE
  EXPERT
}

model EducationalBackground {
  id Int @id @default(autoincrement())
  qualification String
  studyField String
  personnelId Int @unique
  personnel Personnel @relation(fields: [personnelId], references: [id])
  graduationYear Int @map("graduation_year")

  @@map("educational_background")
}

model Project {
  id Int @id @default(autoincrement())
  created_at DateTime @default(now())
  title String
  description String
  personnelId Int
  personnel Personnel @relation(fields: [personnelId], references: [id])

  @@map("projects")
}

model Manager {
  id Int @id @default(autoincrement())
  created_at DateTime @default(now())
  name String
  phoneNumber String @map("phone_number")
  image String
  email String @unique
  emergencyInitiatives EmergencyInitiative[]
  status AvailabilityStatus @default(AVAILABLE)

  @@map("managers")
}

model EmergencyType {
  id Int @id @default(autoincrement())
  created_at DateTime @default(now())
  name String
  status EmergencyTypeStatus @default(ACTIVE)
  emergencyInitiatives EmergencyInitiative[]

  @@map("emergency_types")
}

model EmergencyInitiative {
  id Int @id @default(autoincrement())
  created_at DateTime @default(now())
  dispatched_date DateTime
  location String
  emergencyTypeId Int 
  emergencyType EmergencyType @relation(fields: [emergencyTypeId], references: [id])
  description String
  managerId Int
  manager Manager @relation(fields: [managerId], references: [id])
  end_date DateTime
  state State
  emergencyInitiativeProfession EmergencyIntiativeProfession[]
  emergencyInitiativePersonnel EmergencyIntiativePersonnel[]

  @@map("emergency_initiatives")
}

enum State {
  LOW
  MEDIUM
  HIGH
}

model EmergencyIntiativeProfession {
  id Int @id @default(autoincrement())
  professionId Int
  profession Profession @relation(fields: [professionId], references: [id])
  emergencyInitiativeId Int
  emergencyInitiative EmergencyInitiative @relation(fields: [emergencyInitiativeId], references: [id])
  number Int

  @@map("emergency_profession")
}

model EmergencyIntiativePersonnel {
  id Int @id @default(autoincrement())
  emergencyInitiativeId Int
  emergencyInitiative EmergencyInitiative @relation(fields: [emergencyInitiativeId], references: [id])
  personnelId Int
  personnel Personnel @relation(fields: [personnelId], references: [id])

  @@map("emergency_initiative_personnel")
}